{"version":3,"sources":["context/TodoContext.jsx","context/useLocalStorage.jsx","components/CreateTodoButton.jsx","components/TodoCounter.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoSearch.jsx","modal/Modal.jsx","modal/TodoForm.jsx","pages/AppUI.jsx","pages/App.jsx","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","checkCompleteTodo","setCheckCompleteTodo","completedTodos","filter","todo","completed","length","totalTodos","serchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","CreateTodoButton","useContext","className","onClick","TodoCounter","TodoItem","type","onComplete","onDelete","TodoList","TodoSearch","Fragment","placeholder","onChange","event","console","log","target","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","action","onSubmit","preventDefault","htmlFor","id","name","cols","rows","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.2375d8e1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { useLocalStorage } from './useLocalStorage'\r\n// es un objeto con propiedades, 2 conponentes * {Provider, Consumer}\r\n// const name = react.createContext()\r\nconst TodoContext = React.createContext()\r\n\r\n\r\n// componente atajo para llegar \r\nfunction TodoProvider(props) {\r\n\r\n    const {\r\n        item: todos, \r\n        saveItem: saveTodos, \r\n        loading,\r\n        error,\r\n    } = useLocalStorage('TODOS_V1', [])\r\n\r\n    const [searchValue, setSearchValue] = React.useState('')\r\n    const [openModal, setOpenModal] = React.useState(false)\r\n    const [checkCompleteTodo, setCheckCompleteTodo] = React.useState(false)\r\n\r\n    // debugger\r\n    const completedTodos = todos.filter(todo => !!todo.completed).length\r\n    const totalTodos = todos.length\r\n\r\n    let serchedTodos = []\r\n    \r\n    if (!searchValue.length >= 1){\r\n        serchedTodos = todos\r\n    } else {\r\n        serchedTodos = todos.filter(todo => {\r\n            const todoText = todo.text.toLowerCase()\r\n            const searchText = searchValue.toLowerCase()\r\n            return todoText.includes(searchText)\r\n        })\r\n    }\r\n\r\n    const addTodo = (text) => {\r\n        // debugger\r\n        const newTodos = [...todos]\r\n        // debugger\r\n        newTodos.push({\r\n            text,\r\n            completed: false,\r\n        })\r\n        saveTodos(newTodos)\r\n    }\r\n    const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text)\r\n        setCheckCompleteTodo(true)\r\n        const newTodos = [...todos]\r\n        newTodos[todoIndex].completed = true\r\n\r\n        saveTodos(newTodos)\r\n        // todos[todoIndex] = {\r\n        //     text: todos[todoIndex].text,\r\n        //     completed: true,\r\n        // }\r\n    }\r\n\r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text)\r\n\r\n        const newTodos = [...todos]\r\n        newTodos.splice(todoIndex, 1)\r\n\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider \r\n            value={{\r\n                loading,\r\n                error,\r\n                totalTodos,\r\n                completedTodos,\r\n                searchValue,\r\n                setSearchValue,\r\n                serchedTodos,\r\n                addTodo,\r\n                completeTodo,\r\n                deleteTodo,\r\n                openModal,\r\n                setOpenModal,\r\n                setCheckCompleteTodo,\r\n                checkCompleteTodo\r\n            }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport {TodoContext, TodoProvider}","import React from 'react'\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n\r\n    const [error, setError] = React.useState(false)\r\n    const [loading, setLoading] = React.useState(true)\r\n    \r\n    const [item, setItem] = React.useState(initialValue)\r\n\r\n    React.useEffect(()=>{\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName)\r\n                let parsedItem\r\n                \r\n                if (!localStorageItem) {\r\n                    localStorage.setItem(itemName, JSON.stringify(initialValue))\r\n                    parsedItem = initialValue\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem)\r\n                }\r\n    \r\n                setItem(parsedItem)\r\n                setLoading(false)\r\n            } catch(error){\r\n                setError(error)\r\n            }\r\n        }, 1000)\r\n    })\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            const stringifiedItem = JSON.stringify(newItem)\r\n            localStorage.setItem(itemName, stringifiedItem)\r\n            // console.log(stringifiedItem)\r\n            setItem(newItem)\r\n            // localStorage.clear();\r\n        } catch(error) {\r\n            setError(error)\r\n        }\r\n    }\r\n    return {\r\n        item,\r\n        saveItem,\r\n        loading,\r\n        error,\r\n    }\r\n}\r\n\r\nexport { useLocalStorage }\r\n","import React from 'react'\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nimport '../style/components/CreateTodoButton.css'\r\n\r\nexport const CreateTodoButton = () => {\r\n    const {openModal, setOpenModal} = React.useContext(TodoContext)\r\n    // openModal ? setOpenModal(false) : setOpenModal(true)\r\n    const onClickButton = () => setOpenModal(!openModal)\r\n    return (\r\n        <div>\r\n            <button \r\n                className={openModal ? 'button-add button-add--active' : 'button-add'}\r\n                onClick={onClickButton} \r\n            >+</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nimport '../style/components/TodoCounter.css'\r\n\r\nexport const TodoCounter = () => {\r\n\r\n    const {totalTodos, completedTodos} = React.useContext(TodoContext)\r\n\r\n    return(\r\n        <div className=\"todo-counter\">\r\n            <h1 className=\"todo-title\">Tasks 😁</h1>\r\n            {totalTodos > 0 ? <h2 \r\n                className=\"counter-state\">Has completado {completedTodos} de {totalTodos} tareas\r\n                </h2> : <h2>No tienes tareas</h2>}\r\n        </div>        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../style/components/TodoItem.css'\r\n\r\nexport const TodoItem = (props) => {\r\n    // const onComplete = () =>{\r\n    //     console.log('completed')\r\n    // }\r\n    // const onDelete = () =>{\r\n    //     console.log('deleted')\r\n    // }\r\n    return (\r\n        <li className=\"list-item\">\r\n            <span><button \r\n                className={`button-item button-check ${props.completed && 'button-check--active'}`} \r\n                type=\"button\"\r\n                onClick={props.onComplete}    \r\n            >&#10004;</button></span>\r\n            <p className={`list-item-text ${props.completed && 'list-item-text--complete'}`}>{props.text}</p>\r\n            <span><button \r\n                type=\"button\" \r\n                className=\"button-item button-x\"\r\n                onClick={props.onDelete}    \r\n            >&#10008;</button></span>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoList = (props) => {\r\n    return (\r\n        <section>\r\n            {props.children}\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nimport '../style/components/TodoSearch.css'\r\n\r\nexport const TodoSearch = () => {\r\n    \r\n    const { searchValue , setSearchValue} = React.useContext(TodoContext)\r\n    // const [] = React.useState('')\r\n\r\n    const onSearchValueChange = (event) =>{\r\n        console.log(event.target.value)\r\n        setSearchValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"search-container\">\r\n            <input \r\n                className=\"search-input\" \r\n                type=\"text\" \r\n                placeholder=\"Buscar Tareas\"\r\n                value={searchValue}\r\n                onChange={onSearchValueChange}\r\n            />\r\n            <span className=\"icon-search\">&#9906;</span>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport '../style/modal/modal.css'\r\n\r\nexport function Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className='modal'>\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nimport '../style/modal/TodoForm.css'\r\n\r\nexport function TodoForm() {\r\n\r\n    const [newTodoValue, setNewTodoValue] = React.useState('')\r\n\r\n    const onChangeTodo = (event) =>{\r\n        setNewTodoValue(event.target.value)\r\n    }\r\n\r\n    const {\r\n        addTodo,\r\n        setOpenModal\r\n    } = React.useContext(TodoContext)\r\n    const onCancel = () =>{\r\n        setOpenModal(false)\r\n    }\r\n    const onSubmitTodo = (event) =>{\r\n        // debugger\r\n        event.preventDefault()\r\n        addTodo(newTodoValue)\r\n        setOpenModal(false)\r\n    }\r\n    return (\r\n        <form action=\"\" onSubmit={onSubmitTodo}>\r\n            <label htmlFor=\"todoFormInput\">Escribe tu Nueva tarea</label>\r\n            <textarea \r\n                value={newTodoValue}\r\n                onChange={onChangeTodo}\r\n                id='todoFormInput'\r\n                name='todoFormInput'\r\n                cols=\"20\" \r\n                rows=\"10\" \r\n                placeholder='Terminar los cursos de platzi'></textarea>\r\n            <div className='todoform-button-container'>\r\n                <button \r\n                    type='button'\r\n                    onClick={onCancel}\r\n                    className='button-form button-form--cancel'\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    className='button-form button-form--submit'\r\n                    type='submit'\r\n                >Añadir TODO</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nimport { CreateTodoButton } from '../components/CreateTodoButton'\r\nimport { TodoCounter } from \"../components/TodoCounter\"\r\nimport { TodoItem } from '../components/TodoItem'\r\nimport { TodoList } from '../components/TodoList'\r\nimport { TodoSearch } from '../components/TodoSearch'\r\n\r\nimport { Modal } from '../modal/Modal'\r\nimport { TodoForm } from '../modal/TodoForm'\r\n\r\nimport '../style/Loading.css'\r\n\r\nexport const AppUI = () => {\r\n\r\n    const {\r\n        error, \r\n        loading, \r\n        serchedTodos, \r\n        completeTodo, \r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext)\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"container\">\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n            <TodoList>\r\n                {error && <p>Error 404, failed</p>}\r\n                {loading && <div className='loading-container'><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>}\r\n                {(!loading && !serchedTodos.length) && <p>Crea Tu primer TODO😉</p>}\r\n                {serchedTodos.map(item => (\r\n                    <TodoItem \r\n                        key={item.text}\r\n                        text={item.text} \r\n                        completed={item.completed}\r\n                        onComplete={() => completeTodo(item.text)}\r\n                        onDelete={() => deleteTodo(item.text)}\r\n                    />))}\r\n            </TodoList>\r\n\r\n            {!!openModal && (\r\n                <Modal>\r\n                    <TodoForm></TodoForm>\r\n                </Modal>\r\n            )}\r\n\r\n            <CreateTodoButton \r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n            />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { TodoProvider } from '../context/TodoContext'\r\n\r\nimport { AppUI } from './AppUI'\r\n\r\nimport '../style/pages/App.css'\r\n\r\nexport const App = () => {\r\n    return(\r\n        <TodoProvider>\r\n            <AppUI />\r\n        </TodoProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { App } from './pages/App'\r\n\r\nimport './style/globals.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// ReactDOM.createPortal(<App />, document.getElementById('modal'))\r\n"],"sourceRoot":""}